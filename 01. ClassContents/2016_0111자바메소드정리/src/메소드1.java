/*
 *   메소드 구성요소
 *      => 결과값 (리턴형)
 *      => 입력값(사용자) => 매개변수 (지역변수)
 *         : 메소드 안에서 사용하는 변수 
 *           * 사용자 입력값
 *           * 다른 메소드로 전송
 *             =====> 전체에서 사용하는 변수 (멤버변수)
 *             변수 )
 *                 멤버변수 : 프로그램 종료시에 사라진다 
 *                  = instance변수 (객체변수)
 *                    저장이 따로 된다 
 *                  = static변수
 *                    저장 공간이 1개다 (공유변수)
 *                 지역변수 
 *                  = {}안에서만 사용되는 변수 
 *   => 형식)
 *          ============
 *           리턴형    매개변수
 *          ============
 *             O    O
 *          ============
 *             O    X
 *          ============
 *             X    O   ====> 리턴형이 없는 경우에는 void
 *          ============
 *             X    X
 *          ============
 *          
 *          1) 리턴형 O , 매개변수 O
 *             String substring(int s,int e)
 *          2) 리턴형 O , 매개변수 X
 *             double random()
 *          3) 리턴형 X , 매개변수 O
 *             void print(String s)
 *          4) 리턴형 X , 매개변수 X
 *             void actionPerformd()
 *             
 *        => 형식)
 *           선언부 => 인터페이스,추상클래스
 *           구현부 
 *           String substring(int s,int e) 선언부
 *           {
 *              구현부 
 *           }
 *           
 *    => String클래스 
 *       사용법 
 *        String s  =  값
 *        ====== == 변수
 *        데이터형 (사용자 정의)
 *        
 *        같은 값을 새로운 메모리에 저장 : new 
 *        String s1=new String("aaa");
 *        String s2=new String("aaa");
 *        String s3=new String("aaa");
 *        String s4=new String("aaa");
 *        String s5=new String("aaa");
 *        String s6="aaa";
 *        String s7="aaa";
 *        
 *      => 주요기능 
 *         1) substring
 *         2) indexOf,lastIndexOf
 *         3) startsWith,endWith
 *         4) trim()
 *         5) length()
 *         6) split
 *         7) valueOf
 *         8) replace,replaceAll
 *         9) charAt
 *     ===============================
 *       이차원배열  : 일차원배열 여러개를 모아서 관리
 *       형식) 
 *           데이터형[행][열] 배열명 ;
 *           데이터형 배열명[행][열];
 *           데이터형[행] 배열명[열];
 *           
 *           행 : 줄수,사람갯수   => 일차 for
 *           열 : 데이터 갯수 => 이차 for 
 *           
 *           예)
 *              5명의 학생
 *                국어,영어,수학,총점,평균 ,학점 
 *              [5][6]
 *                 s[5][5]
 *               0    1   2    3   4
 *            ===========================
 *           0   10   20  30   40  50
 *             s[0][0]            s[0][4]
 *            ===========================
 *           1   60   70  80   90  100
 *             s[1][0]
 *            ===========================
 *           2  110  120  130  140 150
 *             s[2][0]   s[2][2]
 *            ===========================
 *           3  160  170  180  190 200
 *             s[3][0]
 *            ===========================
 *           4  210  220  230  240  250
 *             s[4][0]
 *            ===========================
 *            
 *       ======================
 *        1
 *       ======================
 *        2  3
 *       ======================
 *        4  5  6
 *       ======================
 *        7  8  9  10
 *       ======================
 *        11 12  13  14   15
 *       ======================
 *       
 *       int[][] arr=new int[5][5];
 *       
 *       줄수  (행)  데이터 (열)
 *         0       0-0
 *         1       0-1
 *         2       0-2
 *         3       0-3
 *         4       0-4
 *         int k=1;
 *         for(int i=0;i<5;i++)
 *         {
 *            for(int j=0;j<=i;j++)
 *            {
 *                arr[i][j]=k;
 *                k++;
 *            }
 *         }
 *         
 *         ===========================
 *           1    2    3    4     5
 *         ===========================
 *           6    7    8    9
 *         ===========================
 *          10   11   12
 *         ===========================
 *          13   14
 *         ===========================
 *          15
 *         ===========================
 *         
 *         줄수  (행)  데이터 (열)
 *         0       0-4
 *         1       0-3
 *         2       0-2
 *         3       0-1
 *         4       0-0
 *         
 *         i+j=4 ==> j=4-i
 *         
 *         
 *         
 *          ===========================
 *           						1
 *         ===========================
 *         						2	3
 *         ===========================
 *         					4	5	6
 *         ===========================
 *          			7	8	9	10
 *         ===========================
 *          		11	12	13	14	15
 *         ===========================
 *         
 *         
 *         
 *         ===========================
 *          1	2	3	4	5
 *         ===========================
 *          	6	7	8	9
 *         ===========================
 *         			10	11	12
 *         ===========================
 *          			13	14
 *         ===========================
 *          				15
 *         ===========================
 */
public class 메소드1 {
    
	public static void main(String[] args) {
		// TODO Auto-generated method stub
                    //메소드1 a=new 메소드1();
        //System.out.println(a);
		int[][] arr=new int[5][5];
		int k=1;
		for(int i=0;i<5;i++)
		{
			for(int j=i;j<5;j++)
			{
				arr[i][j]=k;
				k++;
			}
		}
		// 출력 
		for(int i=0;i<5;i++)
		{
			for(int j=0;j<5;j++)
			{
				if(arr[i][j]==0)
					System.out.print("\t");
				else
					System.out.print(arr[i][j]+"\t");
			}
			//줄간격
			System.out.println("\n");
		}
	}

}



